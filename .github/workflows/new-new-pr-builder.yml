# This workflow will build the project on pull requests with tests
# Uses:
#   OS: ubuntu-latest
#   Go: go 1.x

name: 👷🛠️ PR Builder

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  GOFLAGS: "-mod=readonly"

jobs:
  lint:
    # ... (this job remains unchanged)

  build:
    name: 🛠️ Build Product
    if: ${{ github.event.label.name == 'trigger-pr-builder' || github.event_name == 'workflow_dispatch' || github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    steps:
      # ... (all steps before this are the same)

      - name: 📊 Upload Unit Test Coverage Report to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: backend/coverage_unit.out
          flags: backend-unit
          name: Backend Unit Tests
          fail_ci_if_error: false
          
      # --- NEW STEP TO ARCHIVE THE REPORT FOR THE NEXT JOB ---
      - name: 📦 Archive Unit Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage-report
          path: backend/coverage_unit.out
          if-no-files-found: error

  test-integration:
    name: 🧪 Integration Tests (${{ matrix.database }})
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database: [sqlite, postgres]
      fail-fast: false
    services:
      # ... (services section is unchanged)
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Set up Go Environment
        uses: ./.github/actions/setup-go

      # --- NEW STEP TO DOWNLOAD THE UNIT TEST REPORT ---
      - name: 📥 Download Unit Coverage Report
        uses: actions/download-artifact@v4
        with:
          name: unit-coverage-report
          # This places the file at ./backend/coverage_unit.out, where 'make merge_coverage' expects it
          path: backend/

      # ... (Cache, Install Dependencies, Configure Test Database steps are unchanged)

      - name: 🧪 Run Integration Tests (${{ matrix.database }})
        uses: ./.github/actions/run-integration-tests
        with:
          database-type: ${{ matrix.database }}
          coverage-enabled: true

      - name: 📊 Upload Integration Test Coverage Report to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/coverage_integration.out
          flags: integration-${{ matrix.database }}
          name: Backend Integration Tests (${{ matrix.database }})
          fail_ci_if_error: false
          
      # --- NEW STEP TO MERGE THE REPORTS LOCALLY ---
      - name: 🧩 Generate Combined Coverage Report
        run: make merge_coverage

      # --- NEW STEP TO UPLOAD THE COMBINED REPORT ---
      - name: 📊 Upload Combined Coverage Report to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/coverage_combined.out
          flags: combined-${{ matrix.database }}
          name: Combined Coverage (${{ matrix.database }})
          fail_ci_if_error: false
